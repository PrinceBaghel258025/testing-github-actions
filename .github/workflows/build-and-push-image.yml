name: Build and update container image for bff-ws

on:
   push:
    branches: [dev, websockets]
    paths:
      - 'backend/**'
      
permissions:
  contents: write
  pull-requests: write


jobs:

  # check_changes:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}
  #   steps:
  #   - name: Checkout Repository
  #     uses: actions/checkout@v2

  #   - name: Set Matrix for Changed Directories
  #     id: set-matrix
  #     run: |
  #       matrix="{\"include\":["
  #       changed=false
  #       for dir in backend/bff-ws backend/bff-ws2; do
  #         if git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- $dir; then
  #           matrix="$matrix{\"dir\":\"$dir\"},"
  #           changed=true
  #         fi
  #       done
  #       matrix="${matrix%?}]}"
  #       if [ "$changed" = true ]; then
  #         echo "::set-output name=matrix::$matrix"
  #       else
  #         echo "::set-output name=matrix::{\"include\":[]}"
  #       fi
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Set matrix for changed directories
        id: set-matrix
        run: |
          CHANGED_DIRS=()
          
            if ! git diff --quiet HEAD^ HEAD -- $dir; then
              CHANGED_DIRS+=("$dir")
            fi
          done
          echo "::set-output name=matrix::$(echo ${CHANGED_DIRS[@]} | jq -R -c 'split(" ")')"


  build:
    needs: check_changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dir: ${{fromJson(needs.check_changes.outputs.matrix)}}
    if: ${{ fromJson(needs.check_changes.outputs.matrix) }}
    
    steps:
    - uses: actions/checkout@master

    - name: Navigate to specific Directory
      run: cd ${{ matrix.dir }}

    - uses: azure/docker-login@v1
      with:
        login-server: 'testing86.azurecr.io' # default: index.docker.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Extract last part of the directory path
      id: extract_last_part
      run: echo "::set-output name=last_part::$(basename $PWD)"

    - name: Build and push docker image
      run: |
        last_part=$(basename ${{ matrix.dir }})
        echo $last_part
        docker build ${{ matrix.dir}} -t testing86.azurecr.io/services/$last_part:${{ github.sha }} 
        docker push testing86.azurecr.io/services/$last_part:${{ github.sha }}

    - name: Update YAML file
      run: |
        last_part=$(basename ${{ matrix.dir }})
        echo $last_part
        echo "Updating YAML file in deploy directory..."
        sed -i "s|image: testing86.azurecr.io/services/$last_part:.*|image: testing86.azurecr.io/services/$last_part:${{ github.sha }}|" deploy/$last_part.yaml
    - name: Upload updated YAML file as artifact
      uses: actions/upload-artifact@v2
      with:
        name: updated-yaml
        path: deploy/

  commit_and_push:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    
    - name: Download updated YAML file
      uses: actions/download-artifact@v2
      with:
        name: updated-yaml
        path: downloaded-yaml

    - name: Move updated YAML files to correct location
      run: |
        mv -f downloaded-yaml/*.yaml deploy/

    - name: Commit and push changes
      run: |
        git config --global user.email "actions@github.com"
        git config --global user.name "GitHub Actions"
        git add deploy
        git commit -m "Updated deployment image tags"
        git push
